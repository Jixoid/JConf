!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/alforce/Projeler/JConf/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	//
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
$(Lib)/libJConf.so	lib.qaos.jconf/Makefile	/^$(Lib)\/libJConf.so: $(Lib)\/libJConf.so.bc$/;"	t
$(Lib)/libJConf.so.bc	lib.qaos.jconf/Makefile	/^$(Lib)\/libJConf.so.bc: $(Objs)$/;"	t
$(Out)/Package.moq	lib.qaos.basis.dev/Makefile	/^$(Out)\/Package.moq: Inc\/JConf.hpp$/;"	t
$(Out)/Package.moq	lib.qaos.jconf.dev/Makefile	/^$(Out)\/Package.moq: Inc\/JConf.hpp$/;"	t
$(Out)/Package.moq	lib.qaos.jconf/Makefile	/^$(Out)\/Package.moq: $(Lib)\/libJConf.so$/;"	t
$(Tmp)/%.bc	lib.qaos.jconf/Makefile	/^$(Tmp)\/%.bc: *\/%.cpp $(Deps)$/;"	t
Arr	lib.qaos.jconf/Dev/JConf.cpp	/^    vector<cObj*> Arr;$/;"	m	struct:qaos::jconf::cArr	typeref:typename:vector<cObj * >	file:
ArrC	lib.qaos.jconf/Dev/JConf.cpp	/^  u32     ArrC   (arr __Arr)$/;"	f	namespace:qaos::jconf	typeref:typename:u32
ArrDel	lib.qaos.jconf/Dev/JConf.cpp	/^  bool    ArrDel (arr __Arr, u32 Index)$/;"	f	namespace:qaos::jconf	typeref:typename:bool
ArrGet	lib.qaos.jconf/Dev/JConf.cpp	/^  obj     ArrGet (arr __Arr, u32 Index)$/;"	f	namespace:qaos::jconf	typeref:typename:obj
ArrPush	lib.qaos.jconf/Dev/JConf.cpp	/^  bool    ArrPush(arr __Arr, obj Object)$/;"	f	namespace:qaos::jconf	typeref:typename:bool
ArrSet	lib.qaos.jconf/Dev/JConf.cpp	/^  bool    ArrSet (arr __Arr, u32 Index, obj Object)$/;"	f	namespace:qaos::jconf	typeref:typename:bool
Basis	lib.qaos.basis.dev/Makefile	/^Basis:$/;"	t
Basis	lib.qaos.jconf.dev/Makefile	/^Basis:$/;"	t
Basis	lib.qaos.jconf/Makefile	/^Basis:$/;"	t
Build	Makefile	/^Build:$/;"	t
Build	lib.qaos.basis.dev/Makefile	/^Build: Basis  $(Out)\/Package.moq$/;"	t
Build	lib.qaos.jconf.dev/Makefile	/^Build: Basis  $(Out)\/Package.moq$/;"	t
Build	lib.qaos.jconf/Makefile	/^Build: Basis $(Out)\/Package.moq$/;"	t
Clean	Makefile	/^Clean:$/;"	t
Clean	lib.qaos.basis.dev/Makefile	/^Clean:$/;"	t
Clean	lib.qaos.jconf.dev/Makefile	/^Clean:$/;"	t
Clean	lib.qaos.jconf/Makefile	/^Clean:$/;"	t
Content	lib.qaos.basis.dev/Inc/Basis.hpp	/^    _T* Content;$/;"	m	struct:jix::arr	typeref:typename:_T *
Count	lib.qaos.basis.dev/Inc/Basis.hpp	/^    u32 Count;$/;"	m	struct:jix::arr	typeref:typename:u32
Deps	lib.qaos.jconf/Makefile	/^Deps = $(foreach dir,$(Dirs),$(wildcard $(dir)\/*.hpp))$/;"	m
Dirs	lib.qaos.jconf/Makefile	/^Dirs = \\$/;"	m
DisArr	lib.qaos.jconf/Dev/JConf.cpp	/^  void DisArr(arr __Obj)$/;"	f	namespace:qaos::jconf	typeref:typename:void
DisStc	lib.qaos.jconf/Dev/JConf.cpp	/^  void DisStc(stc __Obj)$/;"	f	namespace:qaos::jconf	typeref:typename:void
DisVal	lib.qaos.jconf/Dev/JConf.cpp	/^  void DisVal(val __Obj)$/;"	f	namespace:qaos::jconf	typeref:typename:void
GetArr	lib.qaos.jconf.dev/Inc/JConf.hpp	/^      inline obj GetArr(u32 Index)$/;"	f	class:qaos::jconf::quick::obj	typeref:typename:obj
GetArr	lib.qaos.jconf.dev/Inc/JConf.hpp	/^      inline vector<obj> GetArr()$/;"	f	class:qaos::jconf::quick::obj	typeref:typename:vector<obj>
GetC	lib.qaos.jconf.dev/Inc/JConf.hpp	/^      inline u32 GetC()$/;"	f	class:qaos::jconf::quick::obj	typeref:typename:u32
GetStc	lib.qaos.jconf.dev/Inc/JConf.hpp	/^      inline obj GetStc(string Key)$/;"	f	class:qaos::jconf::quick::obj	typeref:typename:obj
GetType	lib.qaos.jconf/Dev/JConf.cpp	/^  inline eToken GetType(string Key)$/;"	f	namespace:qaos::jconf	typeref:typename:eToken
GetVal	lib.qaos.jconf.dev/Inc/JConf.hpp	/^      inline string GetVal()$/;"	f	class:qaos::jconf::quick::obj	typeref:typename:string
Gid	lib.qaos.basis.dev/Inc/Basis.hpp	/^    idG Gid;$/;"	m	struct:jix::idA	typeref:typename:idG
Incs	lib.qaos.jconf/Makefile	/^Incs = $(foreach dir,$(Dirs),-I$(dir))$/;"	m
Int	lib.qaos.jconf/Dev/JConf.cpp	/^      Int,$/;"	e	enum:qaos::jconf::__anon3608573a0111::eToken	file:
IsArr	lib.qaos.jconf/Dev/JConf.cpp	/^  bool IsArr(obj __Obj)$/;"	f	namespace:qaos::jconf	typeref:typename:bool
IsStc	lib.qaos.jconf/Dev/JConf.cpp	/^  bool IsStc(obj __Obj)$/;"	f	namespace:qaos::jconf	typeref:typename:bool
IsVal	lib.qaos.jconf/Dev/JConf.cpp	/^  bool IsVal(obj __Obj)$/;"	f	namespace:qaos::jconf	typeref:typename:bool
Module	lib.qaos.jconf/Makefile	/^Module = $(notdir $(CURDIR))$/;"	m
NewArr	lib.qaos.jconf/Dev/JConf.cpp	/^  arr  NewArr()$/;"	f	namespace:qaos::jconf	typeref:typename:arr
NewStc	lib.qaos.jconf/Dev/JConf.cpp	/^  stc  NewStc()$/;"	f	namespace:qaos::jconf	typeref:typename:stc
NewVal	lib.qaos.jconf/Dev/JConf.cpp	/^  val  NewVal()$/;"	f	namespace:qaos::jconf	typeref:typename:val
Next	lib.qaos.jconf/Dev/JConf.cpp	/^    #define Next(/;"	d	file:
Nil	lib.qaos.basis.dev/Inc/Basis.hpp	/^  #define Nil /;"	d
OHID	lib.qaos.jconf.dev/Inc/JConf.hpp	/^      jconf::obj OHID;$/;"	m	class:qaos::jconf::quick::obj	typeref:typename:jconf::obj
Obj	lib.qaos.jconf/Dev/JConf.cpp	/^  #define Obj ((cObj*)__Obj)/;"	d	file:
Objs	lib.qaos.jconf/Makefile	/^Objs = $(addprefix $(Tmp)\/, $(basename $(notdir $(Srcs))))$/;"	m
Objs	lib.qaos.jconf/Makefile	/^Objs:= $(addsuffix .bc, $(Objs))$/;"	m
Parse	lib.qaos.jconf.dev/Inc/JConf.hpp	/^    inline obj Parse(string FPath)$/;"	f	namespace:qaos::jconf::quick	typeref:typename:obj
Parse	lib.qaos.jconf/Dev/JConf.cpp	/^  stc Parse(const char* FPath)$/;"	f	namespace:qaos::jconf	typeref:typename:stc
ParseBin	lib.qaos.jconf.dev/Inc/JConf.hpp	/^    inline obj ParseBin(string FPath)$/;"	f	namespace:qaos::jconf::quick	typeref:typename:obj
ParseBin	lib.qaos.jconf/Dev/JConf.cpp	/^  stc ParseBin(const char* FPath)$/;"	f	namespace:qaos::jconf	typeref:typename:stc
ParseRaw	lib.qaos.jconf.dev/Inc/JConf.hpp	/^    inline obj ParseRaw(string FPath)$/;"	f	namespace:qaos::jconf::quick	typeref:typename:obj
ParseRaw	lib.qaos.jconf/Dev/JConf.cpp	/^  stc ParseRaw(const char* FPath)$/;"	f	namespace:qaos::jconf	typeref:typename:stc
Parsers	lib.qaos.jconf/Dev/JConf.cpp	/^    string Parsers[] = {$/;"	v	namespace:qaos::jconf::__anon3608573a0111	typeref:typename:string[]
Pid	lib.qaos.basis.dev/Inc/Basis.hpp	/^    idP Pid;$/;"	m	struct:jix::idA	typeref:typename:idP
Point	lib.qaos.basis.dev/Inc/Basis.hpp	/^    point Point;$/;"	m	struct:jix::data_	typeref:typename:point
SArr	lib.qaos.jconf/Dev/JConf.cpp	/^  #define SArr /;"	d	file:
SStc	lib.qaos.jconf/Dev/JConf.cpp	/^  #define SStc /;"	d	file:
SVal	lib.qaos.jconf/Dev/JConf.cpp	/^  #define SVal /;"	d	file:
Size	lib.qaos.basis.dev/Inc/Basis.hpp	/^    uPtr  Size;$/;"	m	struct:jix::data_	typeref:typename:uPtr
Srcs	lib.qaos.jconf/Makefile	/^Srcs = \\$/;"	m
Stc	lib.qaos.jconf/Dev/JConf.cpp	/^    unordered_map<string, cObj*> Stc;$/;"	m	struct:qaos::jconf::cStc	typeref:typename:unordered_map<string,cObj * >	file:
StcDel	lib.qaos.jconf/Dev/JConf.cpp	/^  bool    StcDel(stc __Stc, const char* Name)$/;"	f	namespace:qaos::jconf	typeref:typename:bool
StcGet	lib.qaos.jconf/Dev/JConf.cpp	/^  obj     StcGet(stc __Stc, const char* Name)$/;"	f	namespace:qaos::jconf	typeref:typename:obj
StcSet	lib.qaos.jconf/Dev/JConf.cpp	/^  bool    StcSet(stc __Stc, const char* Name, obj Object)$/;"	f	namespace:qaos::jconf	typeref:typename:bool
Str	lib.qaos.jconf/Dev/JConf.cpp	/^      Str,$/;"	e	enum:qaos::jconf::__anon3608573a0111::eToken	file:
Sym	lib.qaos.jconf/Dev/JConf.cpp	/^      Sym,$/;"	e	enum:qaos::jconf::__anon3608573a0111::eToken	file:
Txt	lib.qaos.jconf/Dev/JConf.cpp	/^      Txt,$/;"	e	enum:qaos::jconf::__anon3608573a0111::eToken	file:
Type	lib.qaos.jconf/Dev/JConf.cpp	/^    u8 Type;$/;"	m	struct:qaos::jconf::cObj	typeref:typename:u8	file:
Uid	lib.qaos.basis.dev/Inc/Basis.hpp	/^    idU Uid;$/;"	m	struct:jix::idA	typeref:typename:idU
Val	lib.qaos.jconf/Dev/JConf.cpp	/^    string Val;$/;"	m	struct:qaos::jconf::cVal	typeref:typename:string	file:
ValGet	lib.qaos.jconf/Dev/JConf.cpp	/^  char*   ValGet(val __Val)$/;"	f	namespace:qaos::jconf	typeref:typename:char *
ValSet	lib.qaos.jconf/Dev/JConf.cpp	/^  bool    ValSet(val __Val, const char* Value)$/;"	f	namespace:qaos::jconf	typeref:typename:bool
Word	lib.qaos.jconf/Dev/JConf.cpp	/^    #define Word /;"	d	file:
WriteBin	lib.qaos.jconf.dev/Inc/JConf.hpp	/^    inline void  WriteBin(string FPath, obj Data)$/;"	f	namespace:qaos::jconf::quick	typeref:typename:void
WriteBin	lib.qaos.jconf/Dev/JConf.cpp	/^  bool WriteBin(const char* FPath, stc Data)$/;"	f	namespace:qaos::jconf	typeref:typename:bool
WriteRaw	lib.qaos.jconf.dev/Inc/JConf.hpp	/^    inline void  WriteRaw(string FPath, obj Data)$/;"	f	namespace:qaos::jconf::quick	typeref:typename:void
WriteRaw	lib.qaos.jconf/Dev/JConf.cpp	/^  bool WriteRaw(const char* FPath, stc Data)$/;"	f	namespace:qaos::jconf	typeref:typename:bool
__ParseBin_Arr	lib.qaos.jconf/Dev/JConf.cpp	/^    cArr* __ParseBin_Arr(ifstream &Stream)$/;"	f	namespace:qaos::jconf	typeref:typename:cArr *
__ParseBin_Stc	lib.qaos.jconf/Dev/JConf.cpp	/^    cStc* __ParseBin_Stc(ifstream &Stream)$/;"	f	namespace:qaos::jconf	typeref:typename:cStc *
__ParseBin_Val	lib.qaos.jconf/Dev/JConf.cpp	/^    cVal* __ParseBin_Val(ifstream &Stream)$/;"	f	namespace:qaos::jconf	typeref:typename:cVal *
__WriteBin_Arr	lib.qaos.jconf/Dev/JConf.cpp	/^    void __WriteBin_Arr(ofstream &Stream, cArr *Content)$/;"	f	namespace:qaos::jconf	typeref:typename:void
__WriteBin_Stc	lib.qaos.jconf/Dev/JConf.cpp	/^    void __WriteBin_Stc(ofstream &Stream, cStc *Content, bool NoMagic)$/;"	f	namespace:qaos::jconf	typeref:typename:void
__WriteBin_Val	lib.qaos.jconf/Dev/JConf.cpp	/^    void __WriteBin_Val(ofstream &Stream, cVal *Content)$/;"	f	namespace:qaos::jconf	typeref:typename:void
__WriteRaw_Arr	lib.qaos.jconf/Dev/JConf.cpp	/^    void __WriteRaw_Arr(ofstream &Stream, cArr *Content, string Prefix = "")$/;"	f	namespace:qaos::jconf	typeref:typename:void
__WriteRaw_Stc	lib.qaos.jconf/Dev/JConf.cpp	/^    void __WriteRaw_Stc(ofstream &Stream, cStc *Content, string Prefix = "")$/;"	f	namespace:qaos::jconf	typeref:typename:void
__WriteRaw_Val	lib.qaos.jconf/Dev/JConf.cpp	/^    void __WriteRaw_Val(ofstream &Stream, cVal *Content)$/;"	f	namespace:qaos::jconf	typeref:typename:void
__anon3608573a0111	lib.qaos.jconf/Dev/JConf.cpp	/^  {$/;"	n	namespace:qaos::jconf	file:
_c_Arr	lib.qaos.jconf/Dev/JConf.cpp	/^  const u8 _c_Arr = 0x3;$/;"	v	namespace:qaos::jconf	typeref:typename:const u8
_c_Mag_JConf	lib.qaos.jconf/Dev/JConf.cpp	/^  const char _c_Mag_JConf[7] = {'C','o','n','f','i','g','_'};$/;"	v	namespace:qaos::jconf	typeref:typename:const char[7]
_c_Mag_Jixoid	lib.qaos.jconf/Dev/JConf.cpp	/^  const char _c_Mag_Jixoid[10] = {'\\e','^','J','I','X','0','1','D','!','\\a'};$/;"	v	namespace:qaos::jconf	typeref:typename:const char[10]
_c_Stc	lib.qaos.jconf/Dev/JConf.cpp	/^  const u8 _c_Stc = 0x2;$/;"	v	namespace:qaos::jconf	typeref:typename:const u8
_c_Val	lib.qaos.jconf/Dev/JConf.cpp	/^  const u8 _c_Val = 0x1;$/;"	v	namespace:qaos::jconf	typeref:typename:const u8
arr	lib.qaos.basis.dev/Inc/Basis.hpp	/^  struct arr$/;"	s	namespace:jix
arr	lib.qaos.jconf.dev/Inc/JConf.hpp	/^  using arr = point;$/;"	t	namespace:qaos::jconf	typeref:typename:point
c16	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using c16 = char16_t;$/;"	t	namespace:jix	typeref:typename:char16_t
c8	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using c8  = char;$/;"	t	namespace:jix	typeref:typename:char
cArr	lib.qaos.jconf/Dev/JConf.cpp	/^    cArr()$/;"	f	struct:qaos::jconf::cArr	file:
cArr	lib.qaos.jconf/Dev/JConf.cpp	/^  struct cArr: cObj$/;"	s	namespace:qaos::jconf	file:
cObj	lib.qaos.jconf/Dev/JConf.cpp	/^  struct cObj$/;"	s	namespace:qaos::jconf	file:
cStc	lib.qaos.jconf/Dev/JConf.cpp	/^    cStc()$/;"	f	struct:qaos::jconf::cStc	file:
cStc	lib.qaos.jconf/Dev/JConf.cpp	/^  struct cStc: cObj$/;"	s	namespace:qaos::jconf	file:
cVal	lib.qaos.jconf/Dev/JConf.cpp	/^    cVal()$/;"	f	struct:qaos::jconf::cVal	file:
cVal	lib.qaos.jconf/Dev/JConf.cpp	/^  struct cVal: cObj$/;"	s	namespace:qaos::jconf	file:
data_	lib.qaos.basis.dev/Inc/Basis.hpp	/^  struct data_$/;"	s	namespace:jix
eToken	lib.qaos.jconf/Dev/JConf.cpp	/^    enum eToken {$/;"	g	namespace:qaos::jconf::__anon3608573a0111	file:
ef	lib.qaos.jconf/Dev/JConf.cpp	/^#define ef /;"	d	file:
el	lib.qaos.jconf/Dev/JConf.cpp	/^#define el  els/;"	d	file:
f32	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using f32 = float;$/;"	t	namespace:jix	typeref:typename:float
f64	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using f64 = double;$/;"	t	namespace:jix	typeref:typename:double
handle	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using handle = uPtr;$/;"	t	namespace:jix	typeref:typename:uPtr
i16	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using i16  = int16_t;$/;"	t	namespace:jix	typeref:typename:int16_t
i32	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using i32  = int32_t;$/;"	t	namespace:jix	typeref:typename:int32_t
i64	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using i64  = int64_t;$/;"	t	namespace:jix	typeref:typename:int64_t
i8	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using i8   = int8_t;$/;"	t	namespace:jix	typeref:typename:int8_t
iPtr	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using iPtr = intptr_t;$/;"	t	namespace:jix	typeref:typename:intptr_t
idA	lib.qaos.basis.dev/Inc/Basis.hpp	/^  struct idA$/;"	s	namespace:jix
idG	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using idG = gid_t;$/;"	t	namespace:jix	typeref:typename:gid_t
idP	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using idP = pid_t;$/;"	t	namespace:jix	typeref:typename:pid_t
idT	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using idT = pthread_t;$/;"	t	namespace:jix	typeref:typename:pthread_t
idU	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using idU = uid_t;$/;"	t	namespace:jix	typeref:typename:uid_t
isEnd	lib.qaos.jconf/Dev/JConf.cpp	/^    #define isEnd /;"	d	file:
jconf	lib.qaos.jconf.dev/Inc/JConf.hpp	/^namespace qaos::jconf$/;"	n	namespace:qaos
jconf	lib.qaos.jconf/Dev/JConf.cpp	/^namespace qaos::jconf$/;"	n	namespace:qaos	file:
jix	lib.qaos.basis.dev/Inc/Basis.hpp	/^namespace jix$/;"	n
obj	lib.qaos.jconf.dev/Inc/JConf.hpp	/^      inline obj(jconf::obj nOHID): OHID(nOHID) $/;"	f	class:qaos::jconf::quick::obj
obj	lib.qaos.jconf.dev/Inc/JConf.hpp	/^    class obj$/;"	c	namespace:qaos::jconf::quick
obj	lib.qaos.jconf.dev/Inc/JConf.hpp	/^  using obj = point;$/;"	t	namespace:qaos::jconf	typeref:typename:point
ohid	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using ohid   = uPtr;$/;"	t	namespace:jix	typeref:typename:uPtr
point	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using point = void*;$/;"	t	namespace:jix	typeref:typename:void *
qaos	lib.qaos.jconf.dev/Inc/JConf.hpp	/^namespace qaos::jconf$/;"	n
qaos	lib.qaos.jconf/Dev/JConf.cpp	/^namespace qaos::jconf$/;"	n	file:
quick	lib.qaos.jconf.dev/Inc/JConf.hpp	/^  namespace quick$/;"	n	namespace:qaos::jconf
stc	lib.qaos.jconf.dev/Inc/JConf.hpp	/^  using stc = point;$/;"	t	namespace:qaos::jconf	typeref:typename:point
u16	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using u16  = uint16_t;$/;"	t	namespace:jix	typeref:typename:uint16_t
u32	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using u32  = uint32_t;$/;"	t	namespace:jix	typeref:typename:uint32_t
u64	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using u64  = uint64_t;$/;"	t	namespace:jix	typeref:typename:uint64_t
u8	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using u8   = uint8_t;$/;"	t	namespace:jix	typeref:typename:uint8_t
uPtr	lib.qaos.basis.dev/Inc/Basis.hpp	/^  using uPtr = uintptr_t;$/;"	t	namespace:jix	typeref:typename:uintptr_t
unquote	lib.qaos.jconf/Dev/JConf.cpp	/^  string unquote(const string &Str)$/;"	f	namespace:qaos::jconf	typeref:typename:string
val	lib.qaos.jconf.dev/Inc/JConf.hpp	/^  using val = point;$/;"	t	namespace:qaos::jconf	typeref:typename:point
~obj	lib.qaos.jconf.dev/Inc/JConf.hpp	/^      inline virtual ~obj() {}$/;"	f	class:qaos::jconf::quick::obj
